//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "QZBaseJob.h"

@class NSArray, NSData, NSDate, NSDictionary, NSError, NSString, QZPOIInfo, QZPreviewVideoModel, QZTaskLbsInfo;

@interface QZVideoJob : QZBaseJob
{
    _Bool _isPictureMix;
    _Bool _isUploadedWithPicture;
    _Bool _showPoi;
    _Bool _useFlowId;
    NSString *_refer;
    NSDictionary *_otherInfo;
    unsigned long long _videoSource;
    NSString *_albumID;
    long long _albumType;
    NSString *_albumName;
    long long _uploadBatchID;
    unsigned long long _index;
    unsigned long long _total;
    QZPOIInfo *_POIInfo;
    NSString *_locationString;
    NSString *_videoID;
    NSString *_coverUploadPath;
    long long _fileSize;
    long long _retryCount;
    NSString *_flowId;
    NSError *_preError;
}

+ (id)operationWithJob:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) QZPOIInfo *POIInfo; // @synthesize POIInfo=_POIInfo;
@property(copy, nonatomic) NSString *albumID; // @synthesize albumID=_albumID;
@property(copy, nonatomic) NSString *albumName; // @synthesize albumName=_albumName;
@property(nonatomic) long long albumType; // @synthesize albumType=_albumType;
@property(copy, nonatomic) NSString *coverUploadPath; // @synthesize coverUploadPath=_coverUploadPath;
@property(nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(retain, nonatomic) NSString *flowId; // @synthesize flowId=_flowId;
@property(nonatomic) unsigned long long index; // @synthesize index=_index;
- (id)initWithCoder:(id)arg1;
@property(nonatomic) _Bool isPictureMix; // @synthesize isPictureMix=_isPictureMix;
@property(nonatomic) _Bool isUploadedWithPicture; // @synthesize isUploadedWithPicture=_isUploadedWithPicture;
- (id)jobTypeName;
@property(copy, nonatomic) NSString *locationString; // @synthesize locationString=_locationString;
@property(copy, nonatomic) NSDictionary *otherInfo; // @synthesize otherInfo=_otherInfo;
- (_Bool)persistent;
@property(retain, nonatomic) NSError *preError; // @synthesize preError=_preError;
@property(copy, nonatomic) NSString *refer; // @synthesize refer=_refer;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) _Bool showPoi; // @synthesize showPoi=_showPoi;
@property(nonatomic) unsigned long long total; // @synthesize total=_total;
@property(nonatomic) long long uploadBatchID; // @synthesize uploadBatchID=_uploadBatchID;
@property(nonatomic) _Bool useFlowId; // @synthesize useFlowId=_useFlowId;
@property(copy, nonatomic) NSString *videoID; // @synthesize videoID=_videoID;
@property(nonatomic) unsigned long long videoSource; // @synthesize videoSource=_videoSource;

// Remaining properties
@property(copy, nonatomic) NSArray *audienceUINs; // @dynamic audienceUINs;
@property(copy, nonatomic) NSDictionary *compressionParams; // @dynamic compressionParams;
@property(copy, nonatomic) NSString *coverFilePath; // @dynamic coverFilePath;
@property(copy, nonatomic) NSDictionary *extendInfo; // @dynamic extendInfo;
@property(retain, nonatomic) NSData *extraData; // @dynamic extraData;
@property(copy, nonatomic) NSString *filePath; // @dynamic filePath;
@property(nonatomic) long long mediaSubtype; // @dynamic mediaSubtype;
@property(retain, nonatomic) QZTaskLbsInfo *photoLBSInfo; // @dynamic photoLBSInfo;
@property(retain, nonatomic) QZPreviewVideoModel *previewModel; // @dynamic previewModel;
@property(nonatomic) long long privacyType; // @dynamic privacyType;
@property(retain, nonatomic) NSDate *timer; // @dynamic timer;
@property(nonatomic) long long uploadEntrance; // @dynamic uploadEntrance;
@property(retain, nonatomic) QZTaskLbsInfo *uploadLBSInfo; // @dynamic uploadLBSInfo;
@property(nonatomic) long long uploadTimestamp; // @dynamic uploadTimestamp;
@property(copy, nonatomic) NSString *videoDescription; // @dynamic videoDescription;
@property(nonatomic) unsigned long long videoDuration; // @dynamic videoDuration;
@property(copy, nonatomic) NSString *videoTitle; // @dynamic videoTitle;
@property(nonatomic) struct CGSize videoViewSize; // @dynamic videoViewSize;

@end

