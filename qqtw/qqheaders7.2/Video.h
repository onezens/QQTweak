//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class EAGLContext;

@interface Video : NSObject
{
    struct VideoSource *src;
    EAGLContext *context;
    int width;
    int height;
    int bpp;
    int fmt;
    float waitDT;
    int req_pos;
    int upload_size;
    double fps_time;
    _Bool playing;
    _Bool loop;
    int v_frame;
    id thumbDelegate;
    id thumbObject;
    struct TargetRenderInfo viewRenderInfo;
    struct TargetRenderInfo disposalRenderInfo;
    struct VideoTexture *painter;
    unsigned int framebuffer;
    unsigned int texture;
    struct VideoWorkerFrame_s last_frame;
    struct VideoWorkerFrame_s work_frame;
    struct VideoWorkerFrame_s *wait_frame;
    float sVidSquareVertices[8];
    float sVidSquareTexcoords[8];
}

- (void)clearRenderTexture;
- (void)dealloc;
- (_Bool)drawFrame:(struct VideoWorkerFrame_s *)arg1 andDisposal:(_Bool)arg2;
- (_Bool)drawNextFrame:(float)arg1;
- (void)drawPreviousFrame:(struct GIFRect)arg1;
- (id)dumpFrame:(struct VideoWorkerFrame_s *)arg1;
@property(readonly, nonatomic) int fmt; // @synthesize fmt;
@property(readonly, nonatomic) double fps_time; // @synthesize fps_time;
- (void)frameClipScale:(float *)arg1;
- (struct CGSize)frameSize;
- (id)initWithSource:(struct VideoSource *)arg1 inContext:(id)arg2;
- (_Bool)nextFrame:(struct VideoWorkerFrame_s *)arg1;
- (void)play:(_Bool)arg1;
@property(readonly, nonatomic) _Bool playing; // @synthesize playing;
- (void)resetState;
- (void)resetState:(_Bool)arg1;
- (void)setPaintHead:(struct VideoTexture *)arg1;
@property(nonatomic) struct VideoSource *src; // @synthesize src;
@property(retain, nonatomic) id thumbDelegate; // @synthesize thumbDelegate;
@property(retain, nonatomic) id thumbObject; // @synthesize thumbObject;
@property(nonatomic) struct TargetRenderInfo viewRenderInfo; // @synthesize viewRenderInfo;
- (_Bool)setupRenderTexture;
- (void)stop;
@property(readonly, nonatomic) int upload_size; // @synthesize upload_size;
@property(readonly, nonatomic) int videoType; // @dynamic videoType;

@end

