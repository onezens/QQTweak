//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "FAViewBase.h"

#import "QQAudioSessionManagerDelegate.h"
#import "TVKLitePlaybackDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class FASupportView, NSString, NSTimerNonRetain, NSURL, QQGradientView, QQViewController, SSProgressView, TVKLitePlayer, UIButton, UIImageView, UILabel, UISlider, UIView;

@interface FAViewVideo : FAViewBase <TVKLitePlaybackDelegate, UIGestureRecognizerDelegate, QQAudioSessionManagerDelegate>
{
    TVKLitePlayer *_player;
    QQGradientView *_playControlPanel;
    UILabel *_audioCurrentTime;
    UILabel *_audioTotalTime;
    UISlider *_audioScrubber;
    UIButton *_playPauseButton;
    UIButton *_moreButton;
    _Bool _bDragging;
    _Bool _bPlaying;
    NSTimerNonRetain *_playProgressTimer;
    NSURL *_videoURL;
    double _duration;
    UIView *_progressView;
    SSProgressView *_circleView;
    UILabel *_errorLabel;
    UIImageView *_thumbImgView;
    FASupportView *_supportView;
    long long _playId;
    _Bool _bLastError;
    _Bool _bPreloading;
    NSTimerNonRetain *_cacheTimer;
    NSTimerNonRetain *_playTimer;
    double _cacheLimit;
    _Bool _bFirst;
    double _lastPlayTime;
    _Bool _dragPause;
    _Bool _hideMenu;
    _Bool _hasAudioSession;
    QQViewController *_hostViewContoller;
}

- (void).cxx_destruct;
- (void)cacheVideo;
- (_Bool)canViewRotate;
- (void)checkCacheTime;
- (void)checkNeedCacheVideo;
- (void)checkPlayTime;
- (void)checkVideoIsCached;
- (void)clean;
- (void)clearPreloadInfo;
- (_Bool)deactionAudioSession;
- (void)enhanceControlPanel:(_Bool)arg1;
- (void)handleVideoChatStart;
- (void)hideLoadingView;
@property(nonatomic) QQViewController *hostViewContoller; // @synthesize hostViewContoller=_hostViewContoller;
- (void)initMoreButtonFromView:(id)arg1;
- (void)initPlayContolPanel;
- (void)initPlayerView;
- (id)initWithFrame:(struct CGRect)arg1 delegate:(id)arg2 dataSource:(id)arg3;
- (void)intTransferControl;
- (_Bool)isNetworkAvailableNow;
- (_Bool)isPlayingVideo;
- (_Bool)isSupportLandFullScreen;
- (void)loadView;
- (void)mediaPlayer:(id)arg1 becomePlayable:(_Bool)arg2;
- (void)mediaPlayer:(id)arg1 getNatureSize:(struct CGSize)arg2;
- (void)mediaPlayer:(id)arg1 log:(id)arg2 andLogLevel:(int)arg3;
- (void)mediaPlayer:(id)arg1 progressUpdated:(double)arg2 duration:(double)arg3;
- (void)mediaPlayer:(id)arg1 stateChanged:(int)arg2 withError:(id)arg3;
- (void)onAppWillEnterForeground;
- (void)onAudioSessionActive;
- (void)onAudioSessionDeactive;
- (void)onCancleClick;
- (void)onIntterruptBegin;
- (void)onIntterruptEnd;
- (void)onMoreButtonClick:(id)arg1;
- (void)onOpenByQBrowser:(id)arg1;
- (void)onOperateClick;
- (void)onVideoActive;
- (void)onVideoDeActive;
- (void)onVideoPlayEnded;
- (void)onVideoScrubberTimer;
- (void)parseViewData:(id)arg1;
- (void)pause;
- (void)pauseForSeek;
- (void)pauseVideo:(id)arg1;
- (void)play;
- (void)playVideo:(id)arg1;
- (void)playVideoByURL:(id)arg1;
- (_Bool)requestAudioSession;
- (void)resumeForSeek;
- (void)scrubVideo:(id)arg1;
- (void)scrubVideoBegin:(id)arg1;
- (void)scrubVideoDidEnd:(id)arg1;
- (void)setLoadingViewHidden:(_Bool)arg1 delay:(_Bool)arg2;
- (void)setMoreButttonHidden:(_Bool)arg1;
- (void)setPlayControlHidden:(_Bool)arg1;
- (void)showErrorMessageView:(id)arg1;
- (void)showLoadingView;
- (void)showPlayVideoError:(id)arg1;
- (void)startCacheTimer;
- (void)startPlayTimer;
- (void)startTimer;
- (void)stopCacheTimer;
- (void)stopCacheVideo:(_Bool)arg1;
- (void)stopPlayTimer;
- (void)stopPlayVideo;
- (void)stopTimer;
- (void)tapGesture:(id)arg1;
- (void)updateControlPanel;
- (void)updateLoadingView:(id)arg1;
- (void)updatePauseInfo:(id)arg1;
- (void)updatePlayerInfo:(id)arg1;
- (void)updateSupportViewInfo:(id)arg1;
- (void)updateThumbViewInfo:(id)arg1;
- (void)updateVideoScrubber:(double)arg1;
- (void)updateViewWithData:(id)arg1;
- (void)weakenControlPanel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

