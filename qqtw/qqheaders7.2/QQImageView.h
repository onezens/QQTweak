//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "QQCircularProgressViewDelegate.h"
#import "QQPhotoDelegate.h"
#import "QQTinyVideoImageViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIScrollViewDelegate.h"

@class GifViewAdapter, NSString, QQAnimatedRevealMaskView, QQBasePhoto, QQCircularProgressView, QQTwinkleCircleProgressView, QzoneGifViewAdapter, UIButton, UIImageView, UILabel, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIScrollView;

@interface QQImageView : UIView <QQTinyVideoImageViewDelegate, UIScrollViewDelegate, QQPhotoDelegate, QQCircularProgressViewDelegate, UIGestureRecognizerDelegate>
{
    struct CGSize _imageSize;
    UIView *_imageView;
    UIScrollView *_scrollView;
    _Bool _isCurrentPage;
    _Bool _canDownload;
    _Bool _isHandleLongPress;
    _Bool _isAnimating;
    _Bool _hasNotifyDownloadFail;
    int _imageState;
    QQCircularProgressView *_progressView;
    id <QQImageViewDelegate> _touchDelegate;
    QQBasePhoto *_photo;
    _Bool _imageLoading;
    UIButton *_openBrowserBtn;
    _Bool _enableCorrectThumbnailRect;
    UILabel *_overSizeLabel;
    UILabel *_picSourceLabel;
    int _xo;
    _Bool _shouldUpdateImage;
    double _lastRotation;
    struct CGAffineTransform _lastScrollViewTransform;
    _Bool _shouldBeginRotate;
    UIPanGestureRecognizer *_panGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    GifViewAdapter *_gifAdapter;
    QzoneGifViewAdapter *_sharpPAdapter;
    UIButton *_videoButton;
    UIImageView *_detailImageView;
    double _displayingZoomScaler;
    double _orginalImageZoomScaler;
    struct CGSize _orginalImageSize;
    NSString *_picSourceStr;
    QQTwinkleCircleProgressView *_tcProgressView;
    QQAnimatedRevealMaskView *_revealMaskView;
    struct CGSize _realImageSize;
}

- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)asynLoadImage;
- (void)browserOpenPhoto:(id)arg1;
- (id)createCommonVideoInfo:(id)arg1;
- (id)createPlayerView:(id)arg1;
- (void)dealloc;
- (void)delayShowFailedTips:(id)arg1;
- (void)downloadImageIfNeeded;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (struct CGRect)getCurrentImageDisplayRect;
- (int)getImageViewImageState;
- (long long)getNextOrientation:(long long)arg1 isClockwise:(_Bool)arg2 count:(int)arg3;
- (struct CGSize)getSizeWithTransform:(struct CGAffineTransform)arg1 inputSize:(struct CGSize)arg2;
- (void)handleDoubleTap:(id)arg1;
- (void)handleLongPressGesture:(id)arg1;
- (void)handleRotationGesture:(id)arg1;
- (void)handleSingleTap;
- (void)handleTapGesture:(id)arg1;
- (void)hideFileOverSizeView;
- (void)hideProgressView;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)isFileNeedDownloadThumb;
- (void)loadDetailImage;
- (void)loadImage;
- (void)loadImageInDefaultRunLoopMode;
- (void)notifyAnimationFinished:(id)arg1;
- (void)notifyAsynLoadImageFail:(id)arg1;
- (void)notifyAsynLoadImageSuccess:(id)arg1;
- (void)notifyDownloadFail:(id)arg1;
- (void)notifyDownloadProgress:(id)arg1;
- (void)notifyDownloadSuccess:(id)arg1;
- (void)notifyDownloadThumbFail:(id)arg1;
- (void)notifyDownloadThumbSuccess:(id)arg1;
- (void)notifyNetWorkError:(id)arg1;
- (void)notifyProgressiveJpgInfo:(id)arg1;
- (void)onPlayVideoButtonClick:(id)arg1;
- (void)openVideoFloat:(id)arg1;
- (void)playTinyVideo;
- (void)processDownloadFail;
@property(nonatomic) struct CGSize realImageSize; // @synthesize realImageSize=_realImageSize;
- (void)reloadPhoto;
- (void)removeAllAnimations;
- (void)removeDetailImageView;
- (void)reset;
- (void)resetFrameWithVideoSize:(struct CGSize)arg1;
- (void)resetImageFrame;
- (void)resetOverSizeLabel;
- (void)resetTCProgressView;
- (void)resetZoomScale;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)setCanDownload:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (void)setIsCurrentPage:(_Bool)arg1;
- (void)setPhoto:(id)arg1;
- (void)setTCProgress:(double)arg1;
- (void)setupQzoneVideoButtonHidden;
- (_Bool)shouldPlayTinyVideo:(id)arg1;
- (_Bool)shouldShowProgress;
- (void)showAnimateAndLoadImage;
- (void)showDetailImageView;
- (void)showDownloadFailNotice:(id)arg1;
- (void)showFileFailView:(_Bool)arg1;
- (void)showPicSourceLabel:(id)arg1;
- (void)showProgressLoading;
- (void)showProgressView;
- (void)showTCProgressView:(_Bool)arg1;
- (void)stopTinyVideo;
- (void)updateImageAfterDelay;
- (void)updateProgressView;
- (id)viewForZoomingInScrollView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enableCorrectThumbnailRect; // @dynamic enableCorrectThumbnailRect;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool imageLoading; // @dynamic imageLoading;
@property(readonly, nonatomic) int imageState; // @dynamic imageState;
@property(readonly, nonatomic) UIView *imageView; // @dynamic imageView;
@property(retain, nonatomic) UIButton *openBrowserBtn; // @dynamic openBrowserBtn;
@property(readonly, nonatomic) QQBasePhoto *photo; // @dynamic photo;
@property(readonly, nonatomic) UIScrollView *scrollView; // @dynamic scrollView;
@property(readonly) Class superclass;
@property(nonatomic) id <QQImageViewDelegate> touchDelegate; // @dynamic touchDelegate;

@end

