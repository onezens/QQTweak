//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

@class CropCornerView, CropHorView, CropVerView, QQToastView;

@interface CropCover : UIView
{
    CropCornerView *leftTop;
    CropCornerView *leftBottom;
    CropCornerView *rightTop;
    CropCornerView *rightBottom;
    CropHorView *horTop;
    CropHorView *horBottom;
    CropVerView *verLeft;
    CropVerView *verRight;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    struct CGPoint _firstTouch;
    struct CGPoint _lastTouch;
    double _touchWidth;
    double _ratio;
    double _imgRatio;
    _Bool _sideHidden;
    _Bool _oneTouch;
    unsigned long long _postion;
    struct CGSize _imgSize;
    int _xo;
    QQToastView *_toastView;
    _Bool _shouldHideSizeText;
    _Bool _markOfValidTouch;
    _Bool _isNewType;
    struct CGSize _minCropSize;
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)getMinCropSize;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool isNewType; // @synthesize isNewType=_isNewType;
- (void)layoutSubviews;
@property(nonatomic) _Bool markOfValidTouch; // @synthesize markOfValidTouch=_markOfValidTouch;
@property(nonatomic) struct CGSize minCropSize; // @synthesize minCropSize=_minCropSize;
@property(nonatomic) unsigned long long position; // @synthesize position=_postion;
- (void)reset;
@property(nonatomic) struct CGSize imgSize; // @dynamic imgSize;
@property(nonatomic) struct CGSize maxSize; // @dynamic maxSize;
@property(nonatomic) double ratio; // @dynamic ratio;
@property(nonatomic) _Bool shouldHideSizeText; // @synthesize shouldHideSizeText=_shouldHideSizeText;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;

// Remaining properties
@property(nonatomic) double imgRatio; // @dynamic imgRatio;
@property(nonatomic) struct CGSize minSize; // @dynamic minSize;

@end

