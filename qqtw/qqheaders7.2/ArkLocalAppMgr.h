//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, NSMutableDictionary;

@interface ArkLocalAppMgr : NSObject
{
    NSMutableDictionary *_appPathCache;
    NSMutableArray *_updateAppByNameTaskList;
    NSMutableDictionary *_updateRecordCache;
    NSMutableDictionary *_appLastUseTimeCache;
    double _lastCheckUpdateTime;
    NSMutableArray *_predownloadAppList;
    int _checkAppUpdateInterval;
    NSMutableArray *_getAppByActionTaskList;
    struct IGetAppInfoByContextActionMetaCallbackImpl *_GetAppInfoByContextActionMetaCallback;
    _Bool _debugUpdateMode;
}

+ (id)QueryAppInfoResultCodeToString:(int)arg1;
+ (id)_copyAppPackageToAppInstallDir:(id)arg1 version:(id)arg2 appPackage:(id)arg3;
+ (int)_sceneStringToEnum:(id)arg1;
+ (int)_sceneStringToMask:(id)arg1;
+ (int)adjustAppUpdatePeriod:(int)arg1 lastUseTime:(id)arg2;
+ (void)cleanupOldInstalledApp;
+ (void)clearInstallApps;
+ (int)compareVersionString:(id)arg1 ver2:(id)arg2;
+ (void)deleteAppByName:(id)arg1;
+ (void)deleteOldInstalledApp:(id)arg1;
+ (id)enumInstalledAppName;
+ (void)findAppActionMatchIntent:(id)arg1 intent:(id)arg2 scene:(int)arg3 appViewDescList:(id)arg4;
+ (void)findAppViewMatchContextActionMeta:(id)arg1 context:(id)arg2 action:(id)arg3 scene:(int)arg4 metaList:(id)arg5 historyMetaList:(id)arg6 appViewDescList:(id)arg7;
+ (id)getAppVerByAppPath:(id)arg1;
+ (id)getArkAppInstallDir:(id)arg1;
+ (id)getArkAppInstallPath:(id)arg1 version:(id)arg2;
+ (id)getLocalAppPathByAppName:(id)arg1;
+ (_Bool)isValidAppFileName:(id)arg1;
+ (_Bool)isValidAppName:(id)arg1;
+ (_Bool)isValidVersionString:(id)arg1;
+ (void)notifyGetAppPathByNameResult:(int)arg1 appName:(id)arg2 msg:(id)arg3 appPath:(id)arg4 costTime:(long long)arg5 callback:(CDUnknownBlockType)arg6;
+ (id)parseAction:(struct ArkXML_TagStruct *)arg1 intent:(id)arg2 scene:(int)arg3;
- (void).cxx_destruct;
- (void)_notifyUpdateByNameResult:(id)arg1 result:(int)arg2 error:(int)arg3 msg:(id)arg4 appPath:(id)arg5 appVersion:(id)arg6 updateInterval:(int)arg7;
- (void)checkAppUpdate;
- (void)clearActionAppQueryCache;
- (void)clearActionAppRecentCache;
- (void)clearAppPathCache;
- (void)dealloc;
- (_Bool)getAppByContextAction:(id)arg1 action:(id)arg2 scene:(int)arg3 metaList:(id)arg4 historyMetaList:(id)arg5 callback:(CDUnknownBlockType)arg6;
- (id)getAppLastUseTime:(id)arg1;
- (_Bool)getAppPathByName:(id)arg1 minVersion:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)getAppPathByNameFromLocal:(id)arg1 minVersion:(id)arg2;
- (id)init;
- (_Bool)isAppNeedUpdate:(id)arg1;
- (void)onApplicationActive;
- (void)onGetAppByActionTaskComplete;
- (void)onGetAppInfoByContextActionMeta:(void *)arg1 appViewList:(const set_acb53744 *)arg2;
- (void)onGetAppInfoByContextActionMeta_GetAppPath:(id)arg1 retCode:(int)arg2 msg:(id)arg3 appPath:(id)arg4 appName:(id)arg5;
- (void)runAppUpdateTask:(id)arg1;
- (void)setUpdateToDebugMode:(_Bool)arg1;
- (_Bool)updateAppByName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)updateAppLastUseTime:(id)arg1;
- (void)updateAppUpdateTime:(id)arg1 updateInterval:(int)arg2;
- (void)updatePredownloadAppList;

@end

