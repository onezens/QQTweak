//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVPlayerItemVideoOutput, AVURLAsset, FBKVOController, NSArray, NSDate, NSHashTable, NSMutableURLRequest, NSString, NSTimer, NSURLConnection, TVKAVPlayer, TVKAVPlayerItem, TVKResourceLoader;

@interface TVKMediaPlayerController : NSObject
{
    _Bool fullscreen;
    _Bool mediaExternalPlaybackActive;
    _Bool useApplicationAudioSession;
    _Bool shouldAutoplay;
    _Bool wasScrubbed;
    _Bool wasNeedCancedCache;
    _Bool wasItem0AddedObserver;
    _Bool wasItem1AddedObserver;
    _Bool wasPlayer0AddedObserver;
    _Bool wasPlayer0AddedTimerObserver;
    _Bool wasPlayer1AddedTimerObserver;
    _Bool itemNeedSeek;
    _Bool needRequestFailedItem;
    _Bool wasUpdatedUrls;
    _Bool no302Redirect;
    _Bool sysVersionIs43AndLater;
    _Bool sysVersionIs50AndLater;
    _Bool sysVersionIs60AndLater;
    _Bool manualPaused;
    _Bool maualPlayed;
    _Bool initalPlayed;
    _Bool isReduceFilesArray;
    _Bool shouldCheckAssetKeyStatus;
    _Bool enableVideoScreenShot;
    _Bool isMuted;
    _Bool isResetting;
    _Bool _enableResoureLoader;
    _Bool _cacheOederFildDidCached;
    _Bool _playedFinished;
    _Bool _hlsPreLaunchPlay;
    int _playId;
    double duration;
    double playableDuration;
    long long checkUrlState;
    long long requestState;
    long long loadState;
    long long playbackState;
    long long seekState;
    double initialPlaybackTime;
    id delegate;
    NSString *version;
    double currentPlaybackTime;
    TVKAVPlayer *player;
    TVKAVPlayer *player0;
    TVKAVPlayer *player1;
    TVKAVPlayerItem *playerItem;
    TVKAVPlayerItem *cacheItem;
    AVURLAsset *cacheAsset;
    long long selectCachePlayer;
    long long selectPlayingPlayer;
    long long mediaUrlType;
    NSArray *fileUrlsArray;
    NSArray *times;
    long long cacheOrder;
    long long playToOrder;
    long long playingOrder;
    long long seekOrder;
    unsigned long long mediaQuence;
    double itemNeedSeekTime;
    double scrubedTime;
    double preItemsTime;
    double preCacheItemsTime;
    id timeObserver0;
    id timeObserver1;
    NSTimer *protectPlayTimer;
    long long retryConnectNums;
    NSMutableURLRequest *request302;
    NSURLConnection *connection302;
    NSTimer *advancePLayMediaTimer;
    double nextAdvanceTime;
    NSTimer *checkPlayedUsedTimer;
    long long networkType;
    long long needCacheFilesNum;
    double seekNeedToWaitingTime;
    AVPlayerItemVideoOutput *hlsVideoOutput;
    double currentVolum;
    long long _releaseModel;
    id _viewDelegate;
    NSDate *_currentDate;
    NSHashTable *_observerPlayerItems;
    long long _forceSelectPlayerIndex;
    FBKVOController *_KVOController;
    TVKResourceLoader *_resourceLoader0;
    TVKResourceLoader *_resourceLoader1;
    struct CGSize naturalSize;
    struct CachedFailedData cachedFailedData;
}

- (void).cxx_destruct;
@property(retain, nonatomic) FBKVOController *KVOController; // @synthesize KVOController=_KVOController;
- (void)addAppDelegateNotification;
- (void)addObserverForPlayer:(id)arg1;
- (void)addPlayItemByURL:(id)arg1 withCacheOrder:(long long)arg2;
- (void)addobserverForPlayerItem:(id)arg1 withForPlayer:(id)arg2;
@property(retain, nonatomic) NSTimer *advancePLayMediaTimer; // @synthesize advancePLayMediaTimer;
- (id)asset;
@property(retain, nonatomic) AVURLAsset *cacheAsset; // @synthesize cacheAsset;
@property(retain, nonatomic) TVKAVPlayerItem *cacheItem; // @synthesize cacheItem;
@property(nonatomic) _Bool cacheOederFildDidCached; // @synthesize cacheOederFildDidCached=_cacheOederFildDidCached;
@property(nonatomic) long long cacheOrder; // @synthesize cacheOrder;
@property(nonatomic) struct CachedFailedData cachedFailedData; // @synthesize cachedFailedData;
- (void)cancelFailedCachingItem:(long long)arg1 withToCacheOrder:(long long)arg2;
- (void)cancelPlayerItemPending:(id)arg1 WithIOSVersion:(double)arg2;
- (void)cancelTheAssetLoading:(id)arg1;
- (void)cancelTheCachingItem:(long long)arg1 withToCacheOrder:(long long)arg2;
- (void)changeOrderValues;
- (void)changePlayerLoadState:(long long)arg1 withError:(id)arg2 withMediaCacheOrder:(long long)arg3 withIsCurrentMediaFile:(_Bool)arg4;
- (void)changePlayerPlaybackStateToPause;
- (_Bool)changePlayerPlaybackStateToPlaying;
- (void)changePlayerRequestState:(long long)arg1 withError:(id)arg2 withMediaRequestOrder:(long long)arg3 withIsCurrentMediaFile:(_Bool)arg4;
- (void)changeStructCachedFailedData:(_Bool)arg1 withCacheOrder:(long long)arg2;
- (void)changeWhichPlayerIsCurrentPlayer;
- (void)changeWhichPlayerToPlay:(_Bool)arg1 withJumpTime:(CDStruct_1b6d18a9)arg2;
- (_Bool)checkCouldPlay;
- (id)checkCurrentCachePlayer;
- (void)checkDuration;
- (void)checkMediaUrlError:(long long)arg1 withError:(id)arg2 withIsCurrentMediaFile:(_Bool)arg3;
- (_Bool)checkMute:(_Bool)arg1;
- (void)checkPlay:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSTimer *checkPlayedUsedTimer; // @synthesize checkPlayedUsedTimer;
- (void)checkRedirect:(id)arg1;
- (void)checkTheInitaTimeToSeekItem;
- (_Bool)checkThePlayerBufferState:(id)arg1;
@property(readonly, nonatomic) long long checkUrlState; // @synthesize checkUrlState;
- (void)closeMediaPlayer;
@property(retain, nonatomic) NSURLConnection *connection302; // @synthesize connection302;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)controlPlayerItem:(id)arg1 withJumpTime:(double)arg2 withChangePlayState:(_Bool)arg3;
- (long long)countMP4Order:(double)arg1;
- (double)countPasedMP4Times:(long long)arg1;
@property(readonly, nonatomic) NSDate *currentDate; // @synthesize currentDate=_currentDate;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
- (CDStruct_1b6d18a9)currentTime;
@property(nonatomic) double currentVolum; // @synthesize currentVolum;
- (void)dealloc;
@property(nonatomic) __weak id delegate; // @synthesize delegate;
@property(readonly, nonatomic) double duration; // @synthesize duration;
@property(nonatomic) _Bool enableResoureLoader; // @synthesize enableResoureLoader=_enableResoureLoader;
@property(nonatomic) _Bool enableVideoScreenShot; // @synthesize enableVideoScreenShot;
- (void)endPlayerCache;
@property(retain, nonatomic) NSArray *fileUrlsArray; // @synthesize fileUrlsArray;
@property(nonatomic) long long forceSelectPlayerIndex; // @synthesize forceSelectPlayerIndex=_forceSelectPlayerIndex;
- (id)getAsset;
- (float)getCurrentPlayerRate;
- (id)getCurrentVideoScreenShot;
- (double)getCurrentVolum;
- (id)getError;
- (id)getHLSCurrentShot;
- (id)getMp4CurrentShots:(long long)arg1 withPlayer:(id)arg2 atTime:(CDStruct_1b6d18a9)arg3 timeTolerance:(double)arg4 interval:(double)arg5 error:(id *)arg6;
- (_Bool)getMuted;
- (id)getResourceLoadFromAsset:(id)arg1 withCacheOrder:(long long)arg2;
- (id)getSpecialMp4VideoScreenShotAtTime:(double)arg1 timeTolerance:(double)arg2 error:(id *)arg3;
- (id)getVideoFillMode;
- (_Bool)hadAudioTrack;
@property(nonatomic) _Bool hlsPreLaunchPlay; // @synthesize hlsPreLaunchPlay=_hlsPreLaunchPlay;
@property(retain, nonatomic) AVPlayerItemVideoOutput *hlsVideoOutput; // @synthesize hlsVideoOutput;
- (id)init;
- (void)initScrubberTimer;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool initalPlayed; // @synthesize initalPlayed;
@property(nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen;
@property(nonatomic) _Bool isMuted; // @synthesize isMuted;
- (_Bool)isPlaying;
@property(nonatomic) _Bool isReduceFilesArray; // @synthesize isReduceFilesArray;
@property(nonatomic) _Bool isResetting; // @synthesize isResetting;
- (_Bool)isStoped;
@property(nonatomic) _Bool itemNeedSeek; // @synthesize itemNeedSeek;
@property(nonatomic) double itemNeedSeekTime; // @synthesize itemNeedSeekTime;
@property(readonly, nonatomic) long long loadState; // @synthesize loadState;
- (void)logWithString:(id)arg1;
- (void)makeAssetSate;
- (void)makeFirstPlayer:(id)arg1 withSecondPlayer:(id)arg2 withCacheOrder:(long long)arg3;
- (void)makePlayer0ToNil;
- (void)makePlayer1ToNil;
- (void)makePlayerToNil;
@property(nonatomic) _Bool manualPaused; // @synthesize manualPaused;
- (void)manualSwithPlayersView:(id)arg1;
@property(nonatomic) _Bool maualPlayed; // @synthesize maualPlayed;
- (void)mediaContentsUrls:(id)arg1 withContentTimes:(id)arg2 withContentType:(long long)arg3;
@property(readonly, nonatomic) _Bool mediaExternalPlaybackActive; // @synthesize mediaExternalPlaybackActive;
- (void)mediaPLayerOccuredFailed:(id)arg1;
- (long long)mediaPlayerCacheState;
- (void)mediaPlayerRetryRequestUrls:(double)arg1;
@property(nonatomic) unsigned long long mediaQuence; // @synthesize mediaQuence;
@property(nonatomic) long long mediaUrlType; // @synthesize mediaUrlType;
- (void)modieyStates;
- (void)monitorCurrentPlayingStatus:(id)arg1;
- (void)monitorPlayingStateWithItemEnd;
- (void)monitorPlayingStateWithItemEndToPlay;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize;
@property(nonatomic) long long needCacheFilesNum; // @synthesize needCacheFilesNum;
@property(nonatomic) _Bool needRequestFailedItem; // @synthesize needRequestFailedItem;
@property(nonatomic) long long networkType; // @synthesize networkType;
@property(nonatomic) double nextAdvanceTime; // @synthesize nextAdvanceTime;
@property(nonatomic) _Bool no302Redirect; // @synthesize no302Redirect;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(retain, nonatomic) NSHashTable *observerPlayerItems; // @synthesize observerPlayerItems=_observerPlayerItems;
- (id)otherPlayer;
- (void)pause;
- (void)pausePlayWithEnterBackground:(id)arg1;
- (void)play;
@property(nonatomic) int playId; // @synthesize playId=_playId;
@property(readonly, nonatomic) long long playToOrder; // @synthesize playToOrder;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState;
@property(nonatomic) _Bool playedFinished; // @synthesize playedFinished=_playedFinished;
@property(nonatomic) __weak TVKAVPlayer *player; // @synthesize player;
@property(retain, nonatomic) TVKAVPlayer *player0; // @synthesize player0;
@property(retain, nonatomic) TVKAVPlayer *player1; // @synthesize player1;
- (void)player:(id)arg1 replaceCurrentItemWithPlayerItem:(id)arg2;
- (void)playerAddTimeObserver:(id)arg1 withTimeObserverIndex:(long long)arg2;
- (void)playerCacheStateDidChangeWithError:(id)arg1 withFileCacheOrder:(long long)arg2 withCacheState:(long long)arg3 withIsCurrentPlayFile:(_Bool)arg4;
@property(retain, nonatomic) TVKAVPlayerItem *playerItem; // @synthesize playerItem;
- (void)playerItemDidReachEnd:(id)arg1;
- (CDStruct_1b6d18a9)playerItemDuration;
@property(nonatomic) long long playingOrder; // @synthesize playingOrder;
@property(nonatomic) double preCacheItemsTime; // @synthesize preCacheItemsTime;
@property(nonatomic) double preItemsTime; // @synthesize preItemsTime;
- (void)prepare:(id)arg1;
- (void)prepareToPlayAsset:(id)arg1 withMediaUrl:(id)arg2 withIsAsset:(_Bool)arg3 withKeys:(id)arg4 withCacheOrder:(long long)arg5 withMediaQuence:(long long)arg6;
@property(retain, nonatomic) NSTimer *protectPlayTimer; // @synthesize protectPlayTimer;
- (float)rate;
- (_Bool)readyToPlay:(_Bool)arg1;
- (void)redirectTheRealUrl:(id)arg1;
@property(nonatomic) long long releaseModel; // @synthesize releaseModel=_releaseModel;
- (void)removeAVPlayerItemObservers:(id)arg1;
- (void)removeAllObserversAndStopPlayers;
- (void)removeAllPlayerItemAndPlayer;
- (void)removeAppDelegateNotification;
- (void)removeHLSVideoOutput;
- (void)removeNotificaton:(id)arg1;
- (void)removeObserversAfterItemEnd;
- (void)removeOtherPlayerResourceWithPlayerIndex:(long long)arg1;
- (void)removePlayerItemObserver:(id)arg1 withPlayerObserver:(id)arg2;
- (void)removePlayerObserver:(id)arg1;
- (void)removePlayerTimeObserver;
@property(retain, nonatomic) NSMutableURLRequest *request302; // @synthesize request302;
@property(readonly, nonatomic) long long requestState; // @synthesize requestState;
- (void)resetValues;
- (void)resetValuesWithResetView:(_Bool)arg1 andItem:(_Bool)arg2;
@property(retain, nonatomic) TVKResourceLoader *resourceLoader0; // @synthesize resourceLoader0=_resourceLoader0;
@property(retain, nonatomic) TVKResourceLoader *resourceLoader1; // @synthesize resourceLoader1=_resourceLoader1;
@property(nonatomic) long long retryConnectNums; // @synthesize retryConnectNums;
@property(nonatomic) double scrubedTime; // @synthesize scrubedTime;
- (void)seek:(double)arg1;
- (void)seek:(double)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
@property(nonatomic) double seekNeedToWaitingTime; // @synthesize seekNeedToWaitingTime;
@property(nonatomic) long long seekOrder; // @synthesize seekOrder;
@property(readonly, nonatomic) long long seekState; // @synthesize seekState;
@property(nonatomic) long long selectCachePlayer; // @synthesize selectCachePlayer;
@property(nonatomic) long long selectPlayingPlayer; // @synthesize selectPlayingPlayer;
- (void)sendDebugInfo:(id)arg1;
- (void)sendMediaPlayerLog:(int)arg1 withLogInfo:(id)arg2;
- (void)setBgColor:(id)arg1;
- (void)setCurrentPlaybackTime:(double)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
- (void)setCurrentPlayerMuted:(_Bool)arg1;
- (void)setFullscreen:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setMuted:(_Bool)arg1;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay;
@property(nonatomic) _Bool shouldCheckAssetKeyStatus; // @synthesize shouldCheckAssetKeyStatus;
@property(nonatomic) _Bool sysVersionIs43AndLater; // @synthesize sysVersionIs43AndLater;
@property(nonatomic) _Bool sysVersionIs50AndLater; // @synthesize sysVersionIs50AndLater;
@property(nonatomic) _Bool sysVersionIs60AndLater; // @synthesize sysVersionIs60AndLater;
@property(retain, nonatomic) id timeObserver0; // @synthesize timeObserver0;
@property(retain, nonatomic) id timeObserver1; // @synthesize timeObserver1;
@property(retain, nonatomic) NSArray *times; // @synthesize times;
@property(nonatomic) _Bool useApplicationAudioSession; // @synthesize useApplicationAudioSession;
@property(copy, nonatomic) NSString *version; // @synthesize version;
- (void)setVideoFillMode:(id)arg1;
@property(retain, nonatomic) id viewDelegate; // @synthesize viewDelegate=_viewDelegate;
- (void)setVolum:(double)arg1;
@property(nonatomic) _Bool wasItem0AddedObserver; // @synthesize wasItem0AddedObserver;
@property(nonatomic) _Bool wasItem1AddedObserver; // @synthesize wasItem1AddedObserver;
@property(nonatomic) _Bool wasNeedCancedCache; // @synthesize wasNeedCancedCache;
@property(nonatomic) _Bool wasPlayer0AddedObserver; // @synthesize wasPlayer0AddedObserver;
@property(nonatomic) _Bool wasPlayer0AddedTimerObserver; // @synthesize wasPlayer0AddedTimerObserver;
@property(nonatomic) _Bool wasPlayer1AddedTimerObserver; // @synthesize wasPlayer1AddedTimerObserver;
@property(nonatomic) _Bool wasScrubbed; // @synthesize wasScrubbed;
@property(nonatomic) _Bool wasUpdatedUrls; // @synthesize wasUpdatedUrls;
- (void)slideHLS:(double)arg1;
- (void)slideMP4:(double)arg1;
- (void)slideMP4:(double)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
- (void)startConnectMediaFileWithCancelOtherRequests;
- (void)startPlayWithInterval:(id)arg1;
- (void)startToCacheNextMP4;
- (void)starttoPLayTheNextMediaFile:(id)arg1;
- (void)stop;
- (void)switchPlayerAndView:(_Bool)arg1 withJumpTime:(CDStruct_1b6d18a9)arg2;
- (void)switchToPlay:(long long)arg1 withTime:(CDStruct_1b6d18a9)arg2;
- (void)syncScrubber;
- (void)tryToPlay;
- (void)updateContentsUrls:(id)arg1;
@property(readonly, nonatomic) NSArray *urls;

@end

